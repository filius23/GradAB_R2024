{
  "hash": "55dd9b6bf8a7dcffe80fa23b24498b15",
  "result": {
    "engine": "knitr",
    "markdown": "# Data Wrangling I: Labels & factor {#wrang1}\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\npend_kap5 <- haven::read_dta(\"./orig/PENDDAT_cf_W13.dta\",\n                             col_select = c(\"pnr\",\"welle\", \"zpsex\", \"PSM0100\",\"azges1\",\"palter\")) %>% \n  filter(welle == 8, palter > 0,azges1 > 0)\n```\n:::\n\n\n\n\n\n\n## Labels from Other Programs in R\n\nIn many software packages like Stata or SPSS, labels are often retained through various operations and then displayed automatically. \nThis is not the case in R. \nInstead, in R, we can assign labels using the `factor` variable type. \nThis approach might seem unusual for those who have worked extensively with Stata or SPSS, but it is quite useful in practice if you get accustomed to the workflow.\n\n\nGenerally, you *can* use value labels from other software packages in are. \nFor example, when we create a count summary with `count()`, the labels from the `.dta`-file are displayed:\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Counting occurrences and showing labels\npend_kap5 %>% \n  count(PSM0100)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 2\n  PSM0100                      n\n  <dbl+lbl>                <int>\n1 -5 [Nutzt kein Internet]    28\n2  1 [Ja]                    318\n3  2 [Nein]                  337\n```\n\n\n:::\n:::\n\n\n\n\nThese are assigned as `attributes()` variables:\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nattributes(pend_kap5$PSM0100)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$label\n[1] \"Nutzung von sozialen Netzwerken?\"\n\n$format.stata\n[1] \"%39.0f\"\n\n$labels\nItem in Fragebogenversion nicht erhoben             Item in Welle nicht erhoben \n                                    -10                                      -9 \n                      Unplausibler Wert                     Nutzt kein Internet \n                                     -8                                      -5 \n       Frage irrtuemlich nicht gestellt                Trifft nicht zu (Filter) \n                                     -4                                      -3 \n                           Keine Angabe                             Weiss nicht \n                                     -2                                      -1 \n                                     Ja                                    Nein \n                                      1                                       2 \n\n$class\n[1] \"haven_labelled\" \"vctrs_vctr\"     \"double\"        \n```\n\n\n:::\n:::\n\n\n\n\n\n`enframe()` from the `{tibble}` (part of the `{tidyverse}`) package helps to get data.frame with an overview of all value labels stored in an attribute:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nattributes(pend_kap5$PSM0100)$labels %>% enframe(value = \"variable_value\",name = \"label\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 2\n   label                                   variable_value\n   <chr>                                            <dbl>\n 1 Item in Fragebogenversion nicht erhoben            -10\n 2 Item in Welle nicht erhoben                         -9\n 3 Unplausibler Wert                                   -8\n 4 Nutzt kein Internet                                 -5\n 5 Frage irrtuemlich nicht gestellt                    -4\n 6 Trifft nicht zu (Filter)                            -3\n 7 Keine Angabe                                        -2\n 8 Weiss nicht                                         -1\n 9 Ja                                                   1\n10 Nein                                                 2\n```\n\n\n:::\n:::\n\n\n\n\n\n\nHowever, managing attributes() is tedious and sometimes causes problems when working with the labelled variables.\n\nR's native way to work with labels are `factor` variables.\nAs mentioned in chapter 2, `factor` variables are strings with a predefined universe and ordering.  \nHow can we use the `attributes()`-labels as `factor` to save typing?\n\n`{haven}` includes the function `as_factor`[^2], which allows us to directly create a `factor` variable from labels:\n\n[^2]: Not to be confused with `as.factor()` from base R – the `_` makes a difference!\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npend_kap5$PSM0100_fct <- as_factor(pend_kap5$PSM0100) # create factor variable from attributes and values\n\n# view:\npend_kap5 %>% select(contains(\"PSM0100\")) %>% head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 2\n  PSM0100                  PSM0100_fct        \n  <dbl+lbl>                <fct>              \n1  2 [Nein]                Nein               \n2  1 [Ja]                  Ja                 \n3  2 [Nein]                Nein               \n4 -5 [Nutzt kein Internet] Nutzt kein Internet\n5 -5 [Nutzt kein Internet] Nutzt kein Internet\n6 -5 [Nutzt kein Internet] Nutzt kein Internet\n```\n\n\n:::\n:::\n\n\n\n\n\n## Creating or editing `factor` manually\n\nAlternatively, we can also label with `factor()` using the `levels` and `labels` options ourselves. The `labels` are assigned in order to the numbers from `levels`.\nAdditionally, all unspecified `levels` automatically become `NA`:\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npend_kap5$PSM0100_fct2 <- factor(pend_kap5$PSM0100,\n                               levels = c(1,2),\n                               labels = c(\"Yes\",\"No\"))\n\n# view:\npend_kap5 %>% select(contains(\"PSM0100\")) %>% head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 3\n  PSM0100                  PSM0100_fct         PSM0100_fct2\n  <dbl+lbl>                <fct>               <fct>       \n1  2 [Nein]                Nein                No          \n2  1 [Ja]                  Ja                  Yes         \n3  2 [Nein]                Nein                No          \n4 -5 [Nutzt kein Internet] Nutzt kein Internet <NA>        \n5 -5 [Nutzt kein Internet] Nutzt kein Internet <NA>        \n6 -5 [Nutzt kein Internet] Nutzt kein Internet <NA>        \n```\n\n\n:::\n:::\n\n\n\n\n\nOr we can use the functions from `{forcats}` to recode a `factor`. `{forcats}` is part of the `{tidyverse}`. With `fct_recode()`, we can change the `levels`:\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlevels(pend_kap5$PSM0100_fct)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"Item in Fragebogenversion nicht erhoben\"\n [2] \"Item in Welle nicht erhoben\"            \n [3] \"Unplausibler Wert\"                      \n [4] \"Nutzt kein Internet\"                    \n [5] \"Frage irrtuemlich nicht gestellt\"       \n [6] \"Trifft nicht zu (Filter)\"               \n [7] \"Keine Angabe\"                           \n [8] \"Weiss nicht\"                            \n [9] \"Ja\"                                     \n[10] \"Nein\"                                   \n```\n\n\n:::\n\n```{.r .cell-code}\npend_kap5$PSM0100_fct3 <- fct_recode(pend_kap5$PSM0100_fct,\n  `Uses social networks` =  \"Ja\", # use `` around words with spaces\n  )\nlevels(pend_kap5$PSM0100_fct3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"Item in Fragebogenversion nicht erhoben\"\n [2] \"Item in Welle nicht erhoben\"            \n [3] \"Unplausibler Wert\"                      \n [4] \"Nutzt kein Internet\"                    \n [5] \"Frage irrtuemlich nicht gestellt\"       \n [6] \"Trifft nicht zu (Filter)\"               \n [7] \"Keine Angabe\"                           \n [8] \"Weiss nicht\"                            \n [9] \"Uses social networks\"                   \n[10] \"Nein\"                                   \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npend_kap5 %>% select(contains(\"PSM0100\")) %>% head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 4\n  PSM0100                  PSM0100_fct         PSM0100_fct2 PSM0100_fct3        \n  <dbl+lbl>                <fct>               <fct>        <fct>               \n1  2 [Nein]                Nein                No           Nein                \n2  1 [Ja]                  Ja                  Yes          Uses social networks\n3  2 [Nein]                Nein                No           Nein                \n4 -5 [Nutzt kein Internet] Nutzt kein Internet <NA>         Nutzt kein Internet \n5 -5 [Nutzt kein Internet] Nutzt kein Internet <NA>         Nutzt kein Internet \n6 -5 [Nutzt kein Internet] Nutzt kein Internet <NA>         Nutzt kein Internet \n```\n\n\n:::\n:::\n\n\n\n\n\n[More `fct_....()` functions from `{forcats}`](#fct_cats) can be found in this [Cheatsheet](https://raw.githubusercontent.com/rstudio/cheatsheets/main/factors.pdf).\n\n## Exercise\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npend_ue5 <- haven::read_dta(\"./orig/PENDDAT_cf_W13.dta\",\n                               col_select = c(\"pnr\",\"welle\",\"PD0400\")) %>% \n  filter(PD0400>0)\n```\n:::\n\n\n\n\n\nEdit the *value labels* of `PD0400`: Religiositaet, Selbsteinstufung\n\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"tabwid\"><style>.cl-07937340{}.cl-07866dee{font-family:'Red Hat Display';font-size:8pt;font-weight:bold;font-style:normal;text-decoration:none;color:rgba(64, 64, 64, 1.00);background-color:transparent;}.cl-07866df8{font-family:'Red Hat Display';font-size:8pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(64, 64, 64, 1.00);background-color:transparent;}.cl-078ba624{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:0;padding-top:0;padding-left:0;padding-right:0;line-height: 1;background-color:transparent;}.cl-078ba62e{margin:0;text-align:right;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:0;padding-top:0;padding-left:0;padding-right:0;line-height: 1;background-color:transparent;}.cl-078ba638{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:0;padding-top:0;padding-left:5pt;padding-right:15pt;line-height: 1;background-color:transparent;}.cl-078bc7b2{width:0.384in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-078bc7bc{width:1.761in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-078bc7bd{width:0.384in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-078bc7be{width:1.761in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-078bc7c6{width:0.384in;background-color:rgba(242, 242, 242, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-078bc7c7{width:1.761in;background-color:rgba(242, 242, 242, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-078bc7c8{width:0.384in;background-color:rgba(242, 242, 242, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-078bc7c9{width:1.761in;background-color:rgba(242, 242, 242, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}</style><table data-quarto-disable-processing='true' class='cl-07937340'><thead><tr style=\"overflow-wrap:break-word;\"><th class=\"cl-078bc7b2\"><p class=\"cl-078ba624\"><span class=\"cl-07866dee\">value</span></p></th><th class=\"cl-078bc7bc\"><p class=\"cl-078ba624\"><span class=\"cl-07866dee\">label</span></p></th></tr></thead><tbody><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-078bc7bd\"><p class=\"cl-078ba62e\"><span class=\"cl-07866df8\">1</span></p></td><td class=\"cl-078bc7be\"><p class=\"cl-078ba638\"><span class=\"cl-07866df8\">Ueberhaupt nicht religioes</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-078bc7c6\"><p class=\"cl-078ba62e\"><span class=\"cl-07866df8\">2</span></p></td><td class=\"cl-078bc7c7\"><p class=\"cl-078ba638\"><span class=\"cl-07866df8\">Eher nicht religioes</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-078bc7bd\"><p class=\"cl-078ba62e\"><span class=\"cl-07866df8\">3</span></p></td><td class=\"cl-078bc7be\"><p class=\"cl-078ba638\"><span class=\"cl-07866df8\">Eher religioes</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-078bc7c8\"><p class=\"cl-078ba62e\"><span class=\"cl-07866df8\">4</span></p></td><td class=\"cl-078bc7c9\"><p class=\"cl-078ba638\"><span class=\"cl-07866df8\">Sehr religioes</span></p></td></tr></tbody></table></div>\n```\n\n:::\n:::\n\n\n\n\n\n+ First, use `head()` and a count with `count()` to get an overview.\n+ How can you use the labels from the `attributes()` with `as_factor()` to create a variable `PD0400_fct`?\n+ Create a `factor()` variable `F411_01_fct2` with *value labels*: `1 = Not at all`, `2 = Rather not`, `3 = Rather yes`, `4 = Very much`\n\n**Bonus exercise:** Use the labeled variable for a bar chart.\n\n## Appendix\n\n### Remove labels with `zap_...` from `{haven}`\n\nThe label `attributes()` often cause problems in further processing. With `haven::zap_labels()`, we can remove value labels from a dataset, and with `haven::zap_label()`, we can remove variable labels.\n\n\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npend_kap5\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 683 × 6\n          pnr welle              zpsex         PSM0100             azges1 palter\n        <dbl> <dbl+lbl>          <dbl+lbl>     <dbl+lbl>           <dbl+> <dbl+>\n 1 1000002601 8 [Welle 8 (2014)] 2 [Weiblich]   2 [Nein]           22     34    \n 2 1000010402 8 [Welle 8 (2014)] 2 [Weiblich]   1 [Ja]             40     30    \n 3 1000019102 8 [Welle 8 (2014)] 1 [Maennlich]  2 [Nein]           40     34    \n 4 1000031403 8 [Welle 8 (2014)] 1 [Maennlich] -5 [Nutzt kein Int… 44     52    \n 5 1000032801 8 [Welle 8 (2014)] 2 [Weiblich]  -5 [Nutzt kein Int… 44     58    \n 6 1000032802 8 [Welle 8 (2014)] 1 [Maennlich] -5 [Nutzt kein Int… 43     62    \n 7 1000038201 8 [Welle 8 (2014)] 1 [Maennlich]  1 [Ja]             43     61    \n 8 1000040003 8 [Welle 8 (2014)] 1 [Maennlich]  2 [Nein]           36     40    \n 9 1000051801 8 [Welle 8 (2014)] 2 [Weiblich]   2 [Nein]           31     44    \n10 1000053101 8 [Welle 8 (2014)] 1 [Maennlich]  1 [Ja]             27     47    \n# ℹ 673 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\npend_kap5 %>% \n  haven::zap_labels() # remove value labels\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 683 × 6\n          pnr welle zpsex PSM0100 azges1 palter\n        <dbl> <dbl> <dbl>   <dbl>  <dbl>  <dbl>\n 1 1000002601     8     2       2     22     34\n 2 1000010402     8     2       1     40     30\n 3 1000019102     8     1       2     40     34\n 4 1000031403     8     1      -5     44     52\n 5 1000032801     8     2      -5     44     58\n 6 1000032802     8     1      -5     43     62\n 7 1000038201     8     1       1     43     61\n 8 1000040003     8     1       2     36     40\n 9 1000051801     8     2       2     31     44\n10 1000053101     8     1       1     27     47\n# ℹ 673 more rows\n```\n\n\n:::\n:::\n\n\n\n\n\n### Creating labels and merging with data\n\nAn alternative approach involves creating a small label `data.frame` and `left_join()` (more on `left_join()` later.)\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntab2 <- pend_kap5 %>% count(PSM0100)\ntab2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 2\n  PSM0100                      n\n  <dbl+lbl>                <int>\n1 -5 [Nutzt kein Internet]    28\n2  1 [Ja]                    318\n3  2 [Nein]                  337\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlab_df <- data.frame(PSM0100=1:2)\nlab_df\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  PSM0100\n1       1\n2       2\n```\n\n\n:::\n\n```{.r .cell-code}\nlab_df$PD0400_lab <- factor(lab_df$PSM0100,levels = 1:2,\n                           labels = c(\"Uses social networks\",\n                                      \"Does not use social networks\"))\nlab_df\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  PSM0100                   PD0400_lab\n1       1         Uses social networks\n2       2 Does not use social networks\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntab2 %>% \n  left_join(lab_df,by = \"PSM0100\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 3\n  PSM0100                      n PD0400_lab                  \n  <dbl+lbl>                <int> <fct>                       \n1 -5 [Nutzt kein Internet]    28 <NA>                        \n2  1 [Ja]                    318 Uses social networks        \n3  2 [Nein]                  337 Does not use social networks\n```\n\n\n:::\n:::\n\n\n\n\n\n### Creating labels in R and exporting to Stata\n\nIf we want to label a dataset for Stata, for example, `{labelled}` comes in handy again:\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(labelled)\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError in library(labelled): es gibt kein Paket namens 'labelled'\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npend_kap5$zpsex_num2 <- as.numeric(pend_kap5$zpsex)\nattributes(pend_kap5$zpsex_num2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nNULL\n```\n\n\n:::\n\n```{.r .cell-code}\nval_labels(pend_kap5$zpsex_num2) <- c(\"Men\"=1,\"Women\"=2)\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError in val_labels(pend_kap5$zpsex_num2) <- c(Men = 1, Women = 2): konnte Funktion \"val_labels<-\" nicht finden\n```\n\n\n:::\n\n```{.r .cell-code}\nattributes(pend_kap5$zpsex_num2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nNULL\n```\n\n\n:::\n\n```{.r .cell-code}\npend_kap5 %>% count(zpsex_num2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 2\n  zpsex_num2     n\n       <dbl> <int>\n1          1   324\n2          2   359\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npend_kap5 %>% \n  select(zpsex_num2) %>% \n  haven::write_dta(.,path = \"./data/pend_kap5.dta\")\n```\n:::\n\n\n\n\n\n...in *Stata*:\n\n\n\n\n::: {.cell}\n\n```{.stata .cell-code}\nuse \"./data/pend_kap5.dta\" \ntab zpsex_num2 \n```\n\n\n::: {.cell-output .cell-output-stdout}\n\n```\n(PASS V3, 2006-2019, 21 Jul 2021, PENDDAT)\n\n\n zpsex_num2 |      Freq.     Percent        Cum.\n------------+-----------------------------------\n     Männer |        324       47.44       47.44\n     Frauen |        359       52.56      100.00\n------------+-----------------------------------\n      Total |        683      100.00\n```\n\n\n:::\n:::\n\n\n\n\n\n[More on `labels` in `{labelled}`](https://joseph.larmarange.net/intro_labelled.html).",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/tabwid-1.1.3/tabwid.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/tabwid-1.1.3/tabwid.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
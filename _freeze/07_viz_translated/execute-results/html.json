{
  "hash": "4e2db8a21a52a6c6b0727235c21306aa",
  "result": {
    "engine": "knitr",
    "markdown": "# Visualization with `{ggplot2}`\n\n\n\n\n\n\n\n\n\n\nIn addition to key figures/tables, distributions can and should also be visualized. `{ggplot2}` offers a huge variety of options for this.\n\n`{ggplot2}` is part of the `{tidyverse}`, which means we can either load only `{ggplot2}` or the entire `{tidyverse}` collection:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(haven) # for data import\nlibrary(tidyverse)\n# library(ggplot2) # not necessary if tidyverse is loaded\n```\n:::\n\n\n\n\n\nFirst, let's look at how to create a scatterplot:\n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](07_viz_translated_files/figure-html/unnamed-chunk-2-1.png){fig-align='center' width=80% height=80%}\n:::\n:::\n\n\n\n\nData for our graph is from the `pend` dataset, which contains information on working hours, as well as the gender and age of the respondents:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(haven)\npend <- read_dta(\"./orig/PENDDAT_cf_W13.dta\")\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npend %>% select(azges1,zpsex,palter) %>% head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 3\n  azges1                         zpsex      palter   \n  <dbl+lbl>                      <dbl+lbl>  <dbl+lbl>\n1 -9 [Item not surveyed in wave] 2 [Female] 36       \n2 -9 [Item not surveyed in wave] 1 [Male]   39       \n3 -3 [Not applicable (filter)]   2 [Female] 38       \n4 -9 [Item not surveyed in wave] 1 [Male]   66       \n5 -9 [Item not surveyed in wave] 2 [Female] 61       \n6 -3 [Not applicable (filter)]   2 [Female] 62       \n```\n\n\n:::\n:::\n\n\n\n\nTo keep the graph manageable, we only use observations from wave 13:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npend_small <- pend %>% filter(welle==13)\n```\n:::\n\n\n\n\n...and we'll overwrite all missing values with `NA`. \nWe'll see later in Chapter 6 how to do this more efficiently.\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npend_small$palter[pend_small$palter>100] <- NA \npend_small$casmin[pend_small$casmin<0] <- NA\npend_small$PAS0100[pend_small$PAS0100<0] <- NA\npend_small$azges1[pend_small$azges1<0] <- NA\n```\n:::\n\n\n\n\n\n## ggplot2 and the Grammar of Graphics \n\n`ggplot2` is the implementation of the concept of \"layered grammar of graphics\" in R. The idea of this visualization system is to break down data visualization into parameters: the underlying dataset, the variables to be displayed, the choice of display shapes, the coordinate system, scales, and statistical transformations. A standard command in `ggplot2` looks something like this:\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(data = dataset, aes(x = var1, y = var2, color = var3)) +\n  geom_point() +\n  labs(title= \"Title\", subtitle = \"Subtitle\") +\n  theme_minimal()\n```\n:::\n\n\n\nSo we first call up a plot with `ggplot()`. Further arguments then define additional aspects:  \n\n+ With `data = `, we specify the `data.frame` we want to visualize.\n+ The aesthetics `aes()` specify which variables are to be displayed: here `var1` on the x-axis, `var2` on the y-axis, and `var3` for coloring.\n+ The layers `geom_..` specify the type of display, e.g., `geom_point()` for point plots and `geom_bar()` for bar charts.\n+ With `labs`, we can add labels, such as a title or axis labels.\n+ The themes `theme_...` set the design of the graphic, e.g., black and white axes and background colors with `theme_bw()`.\n\nNow we will work through the individual *layers* of the graphic:\n\n### `data =`\n\nIn `data =`, we specify the `data.frame` that contains the information to be visualized. We start our ggplot with:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(data = pend_small)\n```\n\n::: {.cell-output-display}\n![](07_viz_translated_files/figure-html/unnamed-chunk-8-1.png){fig-align='center' width=65% height=65%}\n:::\n:::\n\n\n\n\n\n### `aes` \n\nWe want to visualize these values in a scatterplot, with age on the x-axis and weekly working hours on the y-axis:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(data = pend_small, aes(x = palter, y = azges1))\n```\n\n::: {.cell-output-display}\n![](07_viz_translated_files/figure-html/unnamed-chunk-9-1.png){fig-align='center' width=65% height=65%}\n:::\n:::\n\n\n\n\n### `geom`\nIf we only provide these details, we will get an empty coordinate system—why? Because we haven't yet specified what *form* of display we want. For this, we must specify a `geom_`, such as `geom_col()` for bar charts, which we attach to the `ggplot` command with `+`:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(data = pend_small, aes(x = palter, y = azges1)) + geom_point()\n```\n\n::: {.cell-output-display}\n![](07_viz_translated_files/figure-html/unnamed-chunk-10-1.png){fig-align='center' width=65% height=65%}\n:::\n:::\n\n\n\nWith `color =`, we can also change the color of the points:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(data = pend_small, aes(x = palter, y = azges1)) + geom_point(color = \"orange\")\n```\n\n::: {.cell-output-display}\n![](07_viz_translated_files/figure-html/unnamed-chunk-11-1.png){fig-align='center' width=65% height=65%}\n:::\n:::\n\n\n\n[Here](http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf) is an overview of all color names that are recognized, though there are many more colors—see [Appendix](#farben).\n\n### `aes()` Part II\nThis already looks pretty good, but the points are not yet separated by gender. \nTo do this, we need to include the gender information (`zpsex`) in `aes()`.\nIn addition to the axes, `aes()` also specifies the variables for the appearance of the `geom_`s—this can include not only color but also shape, size, or transparency. [Here's an overview](#aes_list).\n\nGender should determine the color of the points, which we can specify in `aes` with `color`:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# results in an error due to labels:\nggplot(data = pend_small, aes(x = palter, y = azges1, color = zpsex )) + \n  geom_point()\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError in UseMethod(\"rescale\"): nicht anwendbare Methode für 'rescale' auf Objekt der Klasse \"c('haven_labelled', 'vctrs_vctr', 'double')\" angewendet\n```\n\n\n:::\n:::\n\n\n\n\nA numeric variable for `color =` results in a color gradient, while a `factor`/`character` variable results in a discrete color scale:\n\n\n\n::: {.cell layout-ncol=\"2\" layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(data = pend_small, aes(x = palter, y = azges1, color = as.numeric(zpsex))) + \n  geom_point()\n```\n\n::: {.cell-output-display}\n![](07_viz_translated_files/figure-html/unnamed-chunk-13-1.png){fig-align='center' width=65% height=65%}\n:::\n\n```{.r .cell-code}\nggplot(data = pend_small, aes(x = palter, y = azges1, color = as.factor(zpsex))) + \n  geom_point()\n```\n\n::: {.cell-output-display}\n![](07_viz_translated_files/figure-html/unnamed-chunk-13-2.png){fig-align='center' width=65% height=65%}\n:::\n\n```{.r .cell-code}\nggplot(data = pend_small, aes(x = palter, y = azges1, color = as.character(zpsex))) + \n  geom_point()\n```\n\n::: {.cell-output-display}\n![](07_viz_translated_files/figure-html/unnamed-chunk-13-3.png){fig-align='center' width=65% height=65%}\n:::\n:::\n\n\n\n\nWe can also specify custom colors with `scale_color_manual`[^2], and a list of possible colors can be found [**here**](http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf).\n\n[^2]: If we had specified `color` in `aes`, the corresponding command would be `scale_color_manual`.\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(data = pend_small, aes(x = palter, y = azges1, color = as.factor(zpsex))) + \n  geom_point() + \n  scale_color_manual(values = c(\"lightskyblue4\",\"navy\"))\n```\n\n::: {.cell-output-display}\n![](07_viz_translated_files/figure-html/unnamed-chunk-14-1.png){fig-align='center' width=65% height=65%}\n:::\n:::\n\n\n\n\n\n### Labels\n\nWith the `breaks` and `labels` options, we can also edit the legend labels. To do this, we first specify the levels of the gender variable in `breaks` and then the corresponding labels in the same order:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(data = pend_small, aes(x = palter, y = azges1, color = as.factor(zpsex))) + \n  geom_point() + \n  scale_color_manual(values = c(\"lightskyblue4\",\"navy\"),\n                    breaks = c(1,2), labels = c(\"Men\", \"Women\") )\n```\n\n::: {.cell-output-display}\n![](07_viz_translated_files/figure-html/unnamed-chunk-15-1.png){fig-align='center' width=75% height=75%}\n:::\n:::\n\n\n\nFinally, we adjust the labels with `labs`, where we have the following options:\n\n+ `title`: Title for the graphic\n+ `subtitle`:  Subtitle for the title\n+ `caption`: Annotation below the graphic\n+ `x`: x-axis label\n+ `y`: y-axis label\n+ `fill`: Legend label when `fill` is specified in `aes()`\n+ `color`: Legend label when `color` is specified in `aes()`\n+ `linetype`: Legend label when `linetype` is specified in `aes()`\n\n\n## Combination of all options\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(data = pend_small, aes(x = palter, y = azges1, \n                               shape = as.factor(zpsex),\n                               color = as.factor(zpsex))) + \n  geom_point(size = 4) + \n  scale_color_manual(values = c(\"lightskyblue\",\"orange\"),\n                     breaks = c(1,2), labels = c(\"Men\", \"Women\")\n                     ) +\n  scale_shape_manual(values = c(18,20),\n                     breaks = c(1,2), labels = c(\"Men\", \"Women\")\n                     ) +\n  labs(color = \"Gender\", \n       shape = \"Gender\",\n       y = \"Hours/Week\",\n       x = \"Age\",\n       title = \"Working hours and age\",\n       subtitle = \"By Gender\",\n       caption = \"Soruce: PASS CF 0619\"\n       ) \n```\n\n::: {.cell-output-display}\n![](07_viz_translated_files/figure-html/fllplt1-1.png){fig-align='center' width=100% height=60%}\n:::\n:::\n\n\n\n\n[Übersicht zu shapes](#shape1)\n\n\n## Visualizing distributions \n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\n\n\n\nWith the following syntax we can create a boxplot using `ggplot2`. Since we are only considering one variable, we only need to specify `y = ` or `x =` depending on whether the box should be oriented vertically or horizontally.\n\n\n\n::: {.cell layout-ncol=\"2\" layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(data = pend_small, aes(y = azges1)) + geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](07_viz_translated_files/figure-html/unnamed-chunk-17-1.png){fig-align='center' width=65% height=65%}\n:::\n\n```{.r .cell-code}\nggplot(data = pend_small, aes(x = azges1)) + geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](07_viz_translated_files/figure-html/unnamed-chunk-17-2.png){fig-align='center' width=65% height=65%}\n:::\n:::\n\n\n\n\nWe can also create separate boxplots for men and women by specifying a variable for the other axis:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(data = pend_small, aes(y = azges1, x = factor(zpsex))) + geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](07_viz_translated_files/figure-html/unnamed-chunk-18-1.png){fig-align='center' width=65% height=65%}\n:::\n:::\n\n\n\n### Histogram\n\nWe can also describe distributions using a histogram using the `geom_histogram()` function.\nIf we want to change the color, `fill =` is the correct option instead of `color =`:\n\n\n\n::: {.cell layout-ncol=\"2\" layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(data = pend_small, aes(x = azges1)) + \n  geom_histogram()  \n```\n\n::: {.cell-output-display}\n![](07_viz_translated_files/figure-html/unnamed-chunk-19-1.png){fig-align='center' width=65% height=65%}\n:::\n\n```{.r .cell-code}\nggplot(data = pend_small, aes(x = azges1)) + \n  geom_histogram(fill = \"sienna1\")  \n```\n\n::: {.cell-output-display}\n![](07_viz_translated_files/figure-html/unnamed-chunk-19-2.png){fig-align='center' width=65% height=65%}\n:::\n:::\n\n\n\n\nTo split the histogram by gender, we can again specify `fill` as an aesthetic. With `position = position_dodge()`, we can place the bars side by side:\n\n\n\n::: {.cell layout-ncol=\"2\" layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(data = pend_small, aes(x = azges1, fill = factor(zpsex))) + \n  geom_histogram() \n```\n\n::: {.cell-output-display}\n![](07_viz_translated_files/figure-html/unnamed-chunk-20-1.png){fig-align='center' width=65% height=65%}\n:::\n\n```{.r .cell-code}\nggplot(data = pend_small, aes(x = azges1, fill = factor(zpsex))) + \n  geom_histogram(position = position_dodge()) \n```\n\n::: {.cell-output-display}\n![](07_viz_translated_files/figure-html/unnamed-chunk-20-2.png){fig-align='center' width=65% height=65%}\n:::\n:::\n\n\n\n\nThe `scale_...manual` commands still work here, but as `scale_fill_manual` instead of `scale_color_manual`:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(data = pend_small, aes(x = azges1, fill = factor(zpsex))) + \n  geom_histogram(position = position_dodge()) +\n  scale_fill_manual(values = c(\"sienna1\",\"dodgerblue4\"),\n                    breaks = 1:2, labels = c(\"Männer\",\"Frauen\")) +\n  labs(fill = \"Geschlecht\")\n```\n\n::: {.cell-output-display}\n![](07_viz_translated_files/figure-html/unnamed-chunk-21-1.png){fig-align='center' width=65% height=65%}\n:::\n:::\n\n\n\n\n### [Exercise](#pltue2) {#ue4_02}\n\n## Categorical variables\n\nNext, we’ll look at a way to visualize the contingency table from [Chapter 2](03_desc.qmd#crosscount):\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npend_small$PD0400[pend_small$PD0400<0] <- NA # exclude missings\npend_small %>% \n  count(zpsex, PD0400) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 3\n   zpsex      PD0400                        n\n   <dbl+lbl>  <dbl+lbl>                 <int>\n 1 1 [Male]    1 [Not at all religious]    40\n 2 1 [Male]    2 [Rather not religious]    41\n 3 1 [Male]    3 [Rather religious]        49\n 4 1 [Male]    4 [Very religious]          22\n 5 1 [Male]   NA                          780\n 6 2 [Female]  1 [Not at all religious]    26\n 7 2 [Female]  2 [Rather not religious]    34\n 8 2 [Female]  3 [Rather religious]        40\n 9 2 [Female]  4 [Very religious]          16\n10 2 [Female] NA                          816\n```\n\n\n:::\n:::\n\n\n\n\nWith `geom_bar()`, we can create bars by setting the height as the count of observations with `..count..` for y:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npend_small %>% \n  filter(!is.na(PD0400)) %>% \n  ggplot(data = ., aes(x = as_factor(PD0400), fill = factor(zpsex),\n                       y = ..count..)) +\n  geom_bar(position = position_dodge()) \n```\n\n::: {.cell-output-display}\n![](07_viz_translated_files/figure-html/unnamed-chunk-23-1.png){fig-align='center' width=65% height=65%}\n:::\n:::\n\n\n\n\nHow do we get relative frequencies? We adjust our `aes` to `y = (..count..)/sum(..count..)`.\nWith `scale_y_continuous(labels = scales::label_percent(accuracy = 1))`, we can also display percentages on the y-axis.\nTo create a bar chart instead of a column chart, simply swap `x` and `y` and adjust the percentage labels using `scale_x_continuous`:\n\n\n\n::: {.cell layout-ncol=\"2\" layout-align=\"center\"}\n\n```{.r .cell-code}\npend_small %>% \n  filter(!is.na(PD0400)) %>% \n  ggplot(data = ., aes(x = as_factor(PD0400), fill = factor(zpsex),\n                       y = (..count..)/sum(..count..) )) +\n  geom_bar(position = position_dodge()) +\n  scale_y_continuous(labels = scales::label_percent(accuracy = 1)) \n```\n\n::: {.cell-output-display}\n![](07_viz_translated_files/figure-html/unnamed-chunk-24-1.png){fig-align='center' width=65% height=65%}\n:::\n\n```{.r .cell-code}\npend_small %>% \n  filter(!is.na(PD0400)) %>% \n  ggplot(data = ., aes(y = as_factor(PD0400), fill = factor(zpsex),\n                       x = (..count..)/sum(..count..) )) +\n  geom_bar(position = position_dodge()) +\n  scale_x_continuous(labels = scales::label_percent(accuracy = 1)) \n```\n\n::: {.cell-output-display}\n![](07_viz_translated_files/figure-html/unnamed-chunk-24-2.png){fig-align='center' width=65% height=65%}\n:::\n:::\n\n\n\n\nThese charts can also be customized with `scale_...` and labeled in detail using `labs()`—all options are consistent across different types of visualizations. Additionally, we can label the categories ourselves with `breaks =` and `labels =` if we don't like the default labels:\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npend_small %>% \n  filter(!is.na(PD0400)) %>% \n  ggplot(data = ., aes(y = PD0400, fill = factor(zpsex),\n                       x = (..count..)/sum(..count..) )) +\n  geom_bar(position=position_dodge()) +\n  scale_fill_manual(values = c(\"navajowhite\",\"navy\"),\n                    breaks = c(1,2), labels = c(\"Men\", \"Women\")) +\n  scale_x_continuous(labels = scales::label_percent(accuracy = 1)) +\n  scale_y_continuous(breaks = 1:4, \n                     labels = c(\"Überhaupt nicht\",\n                                \"Eher nicht\",\n                                \"Eher schon\",\n                                \"Sehr\")) +\n  labs(title = \"Religiösität nach Geschlecht\",\n       subtitle = \"Relative Häufigkeiten\",\n       caption = \"Quelle: PASS-CF 0619\",\n       y = \"Religiösität\",\n       x = \"Relative Häufigkeit\",\n       fill = \"Geschlecht\" ) \n```\n\n::: {.cell-output-display}\n![](07_viz_translated_files/figure-html/fullplot-1.png){fig-align='center' width=65% height=65%}\n:::\n:::\n\n\n\n### [Exercise](#pltue3) {#ue4_03}\n\n## Exercises\n\nFor all tasks, use the first 150 observations (`pend_small`) to keep the plot simple. Remember to exclude missing values with `filter()`; you can use the following command:\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npend <- \n  haven::read_dta(\"./orig/PENDDAT_cf_W13.dta\", \n    col_select = c(\"zpsex\", \"welle\", \"bilzeit\", \"PA0445\", \"PG1270\", \"PEO0400c\")\n  )\n```\n:::\n\n\n\n\n### Exercise 1 {#pltue1}\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npend_u41 <- \n  pend %>% \n  filter(welle == 13, bilzeit > 0, PA0445 > 0) \n```\n:::\n\n\n\n\n+ Create a scatter plot for the variables \"Duration of total unemployment experience in months\" (`PA0445`, y-axis) and \"Duration of education\" (`bilzeit`, x-axis).\n+ Set the color to differentiate between men and women (`zpsex`).\n+ Change the colors to `goldenrod1` and `dodgerblue4` (or any other [from this list](http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf)).\n+ Label the axes and legend!\n\n[Back to top](#ue4_01)\n\n### Exercise 2 {#pltue2}\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npend_u42 <- \n  pend %>% \n  filter(welle == 9, PG1270 > 0) \n```\n:::\n\n\n\n\n+ Create a boxplot or histogram for the distribution of the number of cigarettes and cigarillos smoked per day (in the last week) (`PG1270`).\n+ Customize this graphic so that the distributions for men and women are shown separately.\n+ How can you also set the colors based on gender? (Remember `color =` and `fill =`).\n+ Change the bar colors using `scale_fill_manual`, `scale_fill_brewer`, or `scale_fill_viridis` (see the sections [Colors](#farben), [ColorBrewer](#brewer), and [viridis](#viridis) under \"other options\").\n\n[Back to top](#ue4_02)\n\n### Exercise 3 {#pltue3}\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npend_u43 <- \n  pend %>% \n  filter(welle == 11, PEO0400c > 0) \n```\n:::\n\n\n\n\n+ Create a bar chart for the responses to the question, \"A working mother can have just as close a relationship with her children as a mother who is not employed.\" (`PEO0400c`).\n+ Create a bar chart for `PEO0400c` separated by the `migration` variable, so set the bar colors based on `migration`. The `migration` variable captures whether the respondents have a migration background:\n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"tabwid\"><style>.cl-4980d780{}.cl-496f8494{font-family:'Red Hat Display';font-size:8pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(64, 64, 64, 1.00);background-color:transparent;}.cl-4976100c{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:0;padding-top:0;padding-left:0;padding-right:0;line-height: 1;background-color:transparent;}.cl-49761020{margin:0;text-align:right;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:0;padding-top:0;padding-left:5pt;padding-right:15pt;line-height: 1;background-color:transparent;}.cl-497637d0{width:0.711in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-497637da{width:0.366in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-497637e4{width:3.12in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-497637e5{width:0.711in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-497637e6{width:0.366in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-497637ee{width:3.12in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-497637f8{width:0.711in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-497637f9{width:0.366in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-49763802{width:3.12in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-49763803{width:0.711in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-4976380c{width:0.366in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-4976380d{width:3.12in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}</style><table data-quarto-disable-processing='true' class='cl-4980d780'><thead><tr style=\"overflow-wrap:break-word;\"><th class=\"cl-497637d0\"><p class=\"cl-4976100c\"><span class=\"cl-496f8494\">Variable</span></p></th><th class=\"cl-497637da\"><p class=\"cl-4976100c\"><span class=\"cl-496f8494\">value</span></p></th><th class=\"cl-497637e4\"><p class=\"cl-4976100c\"><span class=\"cl-496f8494\">label</span></p></th></tr></thead><tbody><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-497637e5\"><p class=\"cl-4976100c\"><span class=\"cl-496f8494\">`PEO0400c`</span></p></td><td class=\"cl-497637e6\"><p class=\"cl-49761020\"><span class=\"cl-496f8494\">1</span></p></td><td class=\"cl-497637ee\"><p class=\"cl-4976100c\"><span class=\"cl-496f8494\">Completely agree</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-497637f8\"><p class=\"cl-4976100c\"><span class=\"cl-496f8494\"></span></p></td><td class=\"cl-497637f9\"><p class=\"cl-49761020\"><span class=\"cl-496f8494\">2</span></p></td><td class=\"cl-49763802\"><p class=\"cl-4976100c\"><span class=\"cl-496f8494\">Rather agree</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-497637f8\"><p class=\"cl-4976100c\"><span class=\"cl-496f8494\"></span></p></td><td class=\"cl-497637f9\"><p class=\"cl-49761020\"><span class=\"cl-496f8494\">3</span></p></td><td class=\"cl-49763802\"><p class=\"cl-4976100c\"><span class=\"cl-496f8494\">Rather not agree</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-497637f8\"><p class=\"cl-4976100c\"><span class=\"cl-496f8494\"></span></p></td><td class=\"cl-497637f9\"><p class=\"cl-49761020\"><span class=\"cl-496f8494\">4</span></p></td><td class=\"cl-49763802\"><p class=\"cl-4976100c\"><span class=\"cl-496f8494\">Do not agree at all</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-49763803\"><p class=\"cl-4976100c\"><span class=\"cl-496f8494\">`migration`</span></p></td><td class=\"cl-4976380c\"><p class=\"cl-49761020\"><span class=\"cl-496f8494\">1</span></p></td><td class=\"cl-4976380d\"><p class=\"cl-4976100c\"><span class=\"cl-496f8494\">No migration background</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-497637f8\"><p class=\"cl-4976100c\"><span class=\"cl-496f8494\"></span></p></td><td class=\"cl-497637f9\"><p class=\"cl-49761020\"><span class=\"cl-496f8494\">2</span></p></td><td class=\"cl-49763802\"><p class=\"cl-4976100c\"><span class=\"cl-496f8494\">Person is immigrated</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-497637f8\"><p class=\"cl-4976100c\"><span class=\"cl-496f8494\"></span></p></td><td class=\"cl-497637f9\"><p class=\"cl-49761020\"><span class=\"cl-496f8494\">3</span></p></td><td class=\"cl-49763802\"><p class=\"cl-4976100c\"><span class=\"cl-496f8494\">At least one parent is immigrated</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-497637e5\"><p class=\"cl-4976100c\"><span class=\"cl-496f8494\"></span></p></td><td class=\"cl-497637e6\"><p class=\"cl-49761020\"><span class=\"cl-496f8494\">4</span></p></td><td class=\"cl-497637ee\"><p class=\"cl-4976100c\"><span class=\"cl-496f8494\">At least one grand-parent is immigrated, parents born in GER</span></p></td></tr></tbody></table></div>\n```\n\n:::\n:::\n\n\n\n\n[Back to top](#ue4_03)\n\n## More options for `{ggplot2}` \n\n### Aesthetics {#aes_list}\n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](07_viz_translated_files/figure-html/unnamed-chunk-30-1.png){fig-align='center' width=65% height=65%}\n:::\n:::\n\n\n\n\n### themes {#themes} \n\nWith so-called themes, we can change the layout of the graphic. Other themes include `theme_light()`, `theme_classic()`, or `theme_void()`. A full list can be found [here](https://ggplot2.tidyverse.org/reference/ggtheme.html). Additionally, the [{ggthemes}](https://yutannihilation.github.io/allYourFigureAreBelongToUs/ggthemes) package (`install.packages('ggthemes')`) offers a wide selection.\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(data = pend_small, aes(x = palter, y = azges1, color = factor(zpsex))) + \n  geom_point(size = 2) + \n  theme_minimal()\n\nggplot(data = pend_small, aes(x = palter, y = azges1, color = factor(zpsex))) + \n  geom_point(size = 2) +\n  theme_dark()\n```\n:::\n\n::: {.cell layout-ncol=\"2\" layout-align=\"center\"}\n::: {.cell-output-display}\n![](07_viz_translated_files/figure-html/unnamed-chunk-32-1.png){fig-align='center' width=65% height=65%}\n:::\n\n::: {.cell-output-display}\n![](07_viz_translated_files/figure-html/unnamed-chunk-32-2.png){fig-align='center' width=65% height=65%}\n:::\n\n::: {.cell-output-display}\n![](07_viz_translated_files/figure-html/unnamed-chunk-32-3.png){fig-align='center' width=65% height=65%}\n:::\n\n::: {.cell-output-display}\n![](07_viz_translated_files/figure-html/unnamed-chunk-32-4.png){fig-align='center' width=65% height=65%}\n:::\n:::\n\n\n\n\n### Farben {#farben}\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\np1 <- ggplot(data = pend_small, aes(x = palter, y = azges1, color = factor(zpsex))) + \n  geom_point(size = 3) \n```\n:::\n\n\n\n\n\nNeben den im Beispiel verwendeten Farben für `fill` können natürlich auch noch unzählige weitere Farben in `scale_fill_manual`  und `scale_color_manual` verwendet werden:\n\n+ [Hier](http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf) findet sich eine Übersicht mit allen Farbnamen, die verstanden werden\n+ Alternativ können auch sog. HEX-Codes angeben werden, die bspw. mit dem [Adobe Color Wheel](https://color.adobe.com/de/create/color-wheel) oder [Color Hex](https://www.color-hex.com/) erstellt werden können.\n\n\n\n\n::: {.cell layout-ncol=\"2\" layout-align=\"center\"}\n\n```{.r .cell-code}\np1 +  scale_color_manual(values = c(\"dodgerblue4\",\"sienna1\"),\n                    breaks = c(1,2), labels = c(\"Men\", \"Women\") )\n```\n\n::: {.cell-output-display}\n![](07_viz_translated_files/figure-html/unnamed-chunk-34-1.png){fig-align='center' width=65% height=65%}\n:::\n\n```{.r .cell-code}\np1 +  scale_color_manual(values = c(\"#005b96\",\"#6497b1\"),\n                    breaks = c(1,2), labels = c(\"Men\", \"Women\") )\n```\n\n::: {.cell-output-display}\n![](07_viz_translated_files/figure-html/unnamed-chunk-34-2.png){fig-align='center' width=65% height=65%}\n:::\n:::\n\n\n\n\n#### ColorBreweR {#brewer}\n\nAlternativ zur manuellen Auswahl der Farben mit `scale_fill_manual` und `scale_color_manual` können mit `scale_fill_brewer()` auch vorgegebene Farbpaletten des *colorbrewer* verwendet werden. Dazu muss lediglich `scale_fill_brewer()` anstelle von `scale_fill_manual` angeben werden und statt `values` eine der Paletten - eine Übersicht findet sich [hier](http://colorbrewer2.org/). Die Farbpaletten von ColorBreweR sind alle in ggplot2 integriert.\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\np1 +\n  scale_color_brewer(palette = \"RdYlBu\",\n                    breaks = c(1,2), labels = c(\"Men\", \"Women\") ) \n```\n\n::: {.cell-output-display}\n![](07_viz_translated_files/figure-html/unnamed-chunk-35-1.png){fig-align='center' width=65% height=65%}\n:::\n:::\n\n\n\n\n\n#### viridis {#viridis}\n\nAnalog dazu gibt es auch die [{viridis}](https://cran.r-project.org/web/packages/viridis/vignettes/intro-to-viridis.html)-Paletten, welche durchgängig \"colorblind-safe\" und ebenfalls in {ggplot2} integriert sind. Allerdings ist hier zu beachten, dass für Farbauswahlen basierend auf einer kategorialen Variable `scale_color_viridis_d()` zu verwenden ist. Soll die Farbe entlang einer numerischen/metrischen Variable bestimmt werden, dann ist `scale_color_viridis_c()` zu verwenden. Außerdem kann mit `begin` und `end` die Breite der Farbskala angepasst werden:\n\n\n\n::: {.cell layout-ncol=\"2\" layout-align=\"center\"}\n\n```{.r .cell-code}\np1 +\n  scale_color_viridis_d(option=\"magma\",\n                    breaks = c(1,2), labels = c(\"Men\", \"Women\") ) \n```\n\n::: {.cell-output-display}\n![](07_viz_translated_files/figure-html/unnamed-chunk-36-1.png){fig-align='center' width=65% height=65%}\n:::\n\n```{.r .cell-code}\np1 +\n  scale_color_viridis_d(option=\"magma\",begin = .65,end = .85,\n                    breaks = c(1,2), labels = c(\"Men\", \"Women\") ) \n```\n\n::: {.cell-output-display}\n![](07_viz_translated_files/figure-html/unnamed-chunk-36-2.png){fig-align='center' width=65% height=65%}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](./pic/104_viridis-scales.png){fig-align='center' width=65% height=65%}\n:::\n:::\n\n\n\n\n\n#### Weitere Farbpaletten\n\nDarüber hinaus gibt es unzählige Pakete, die ebenfalls `scale_color_` und `scale_fill_`-Funktionen bieten:\nHier noch zwei Beispiele mit  [{scico}](https://github.com/thomasp85/scico) und [{MetBrewer}](https://github.com/BlakeRMills/MetBrewer), welches Farben aus Bildern im Metropolitan Museum of Art enthält:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ninstall.packages('scico')\ninstall.packages(\"MetBrewer\")\n```\n:::\n\n\n\n\n[{scico}](https://github.com/thomasp85/scico) Farbpaletten\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](07_viz_translated_files/figure-html/unnamed-chunk-39-1.png){fig-align='center' width=65% height=60%}\n:::\n:::\n\n\n\n\n[{MetBrewer}](https://github.com/BlakeRMills/MetBrewer) Farbpaletten\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](./pic/104_metbrewer.png){fig-align='center' width=100% height=65%}\n:::\n:::\n\n::: {.cell layout-ncol=\"2\" layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(scico)\np1 +\n  scale_color_scico_d(palette = \"oslo\",begin = .5,end = .8,\n                    breaks = c(1,2), labels = c(\"Men\", \"Women\") ) \n```\n\n::: {.cell-output-display}\n![](07_viz_translated_files/figure-html/unnamed-chunk-41-1.png){fig-align='center' width=65% height=65%}\n:::\n\n```{.r .cell-code}\nlibrary(MetBrewer)\np1 +\n  scale_color_met_d(name = \"Kandinsky\",\n                    breaks = c(1,2), labels = c(\"Men\", \"Women\") ) \n```\n\n::: {.cell-output-display}\n![](07_viz_translated_files/figure-html/unnamed-chunk-41-2.png){fig-align='center' width=65% height=65%}\n:::\n:::\n\n\n\n\n\nComparable packages also exist for:\n\n+ [{DutchMasters}](https://github.com/EdwinTh/dutchmasters) - Color palettes from paintings by Dutch masters.\n+ [{wesanderson}](https://github.com/karthik/wesanderson) - Color palettes based on various Wes Anderson films (e.g., The Grand Budapest Hotel).\n+ [{ochRe}](https://github.com/hollylkirk/ochRe) - Color palettes \"inspired by Australian art, landscapes, and wildlife.\"\n+ [{paletteer}](https://github.com/EmilHvitfeldt/paletteer) offers a vast selection of various color palettes.\n\nCheck out the interactive color picker [here](https://emilhvitfeldt.github.io/r-color-palettes/)\n\n\n### Shapes {#shape1}\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](07_viz_translated_files/figure-html/unnamed-chunk-42-1.png){fig-align='center' width=50% height=50%}\n:::\n:::\n\n\n\n\n[**Zusätzlicher Überblick**](https://blog.albertkuo.me/post/point-shape-options-in-ggplot/)\n\n### Linetypes {#line}\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](07_viz_translated_files/figure-html/unnamed-chunk-43-1.png){fig-align='center' width=50% height=30%}\n:::\n:::\n\n\n\n\n\n::: callout-note\n# Overview\n\nShapes und Linetypes at a glance in the [R Cookbook](http://www.cookbook-r.com/Graphs/Shapes_and_line_types/)\n\n:::\n\n## Useful links\n\n+ The [Graphs chapter of the R Cookbook](www.cookbook-r.com/Graphs/) is an excellent resource for various options and a basic overview—for example, on adjusting the [legend](http://www.cookbook-r.com/Graphs/Legends_(ggplot2)), [line and point types](http://www.cookbook-r.com/Graphs/Shapes_and_line_types), or the [axes](http://www.cookbook-r.com/Graphs/Axes_(ggplot2)).\n\n+ Adjusting font size and color: [This guide](https://cmdlinetips.com/2021/05/tips-to-customize-text-color-font-size-in-ggplot2-with-element_text/) provides a good overview of how to modify font size and color in `{ggplot2}`.\n\n+ [From Data to Viz](https://www.data-to-viz.com/#explore) offers a decision tree for various relationships and descriptions with example syntax.\n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](./pic/104_decision.png){fig-align='center' width=80% height=80%}\n:::\n:::\n\n\n\n\n+ The [R Graph Gallery](https://r-graph-gallery.com/) is even more extensive and offers additional visualization ideas.\n\n+ For those who want to learn more about effective (and beautiful) data visualizations with `{ggplot2}`, [Cédric Scherer’s tutorial](https://cedricscherer.netlify.app/2019/08/05/a-ggplot2-tutorial-for-beautiful-plotting-in-r/) is an excellent introduction. [This workshop](https://github.com/z3tt/beyond-bar-and-box-plots/blob/main/README.md#talk-resources) is great for further exploration.\n\n+ [This workshop](https://rstudio-conf-2022.github.io/ggplot2-graphic-design/) offers additional insights on how to make data visualizations more appealing with `{ggplot2}`.\n\n+ [A list of extensions for ggplot2](https://albert-rapp.de/posts/ggplot2-tips/12_a_few_gg_packages/12_a_few_gg_packages.html).\n\n+ [**The** book on {ggplot2}](https://ggplot2-book.org/index.html).",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/tabwid-1.1.3/tabwid.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/tabwid-1.1.3/tabwid.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}